{
  "info": {
    "_postman_id": "0c3f9d7a-70a5-4a75-8c6b-1a2f3a46d11a",
    "name": "Compliance Monitor Server",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Requests for the Compliance Monitor backend."
  },
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:3000" },
    { "key": "apiKey", "value": "dev_local" }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      { "key": "key", "value": "X-API-Key", "type": "string" },
      { "key": "value", "value": "{{apiKey}}", "type": "string" },
      { "key": "in", "value": "header", "type": "string" }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "if (!pm.collectionVariables.get('baseUrl')) pm.collectionVariables.set('baseUrl', 'http://localhost:3000');",
          "if (!pm.collectionVariables.get('apiKey')) pm.collectionVariables.set('apiKey', 'dev_local');",
          "pm.collectionVariables.set('timestamp', Math.floor(Date.now()/1000));"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "Health",
      "request": {
        "method": "GET",
        "header": [],
        "url": { "raw": "{{baseUrl}}/health", "host": ["{{baseUrl}}"], "path": ["health"] }
      },
      "response": []
    },
    {
      "name": "Report: POST /api/v1/report",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"machine_id\": \"demo-machine\",\n  \"hostname\": \"demo-host\",\n  \"os\": \"Windows\",\n  \"timestamp\": {{timestamp}},\n  \"checks\": {\n    \"disk_encryption\": { \"status\": \"ok\", \"summary\": \"BitLocker enabled\" },\n    \"os_updates\": { \"status\": \"ok\", \"summary\": \"Up to date\" },\n    \"antivirus\": { \"status\": \"ok\", \"summary\": \"Defender active\" },\n    \"sleep_policy\": { \"status\": \"issue\", \"summary\": \"Sleep > 10m\" }\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/v1/report",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "report"]
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.variables.set('timestamp', Math.floor(Date.now()/1000));"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "response": []
    },
    {
      "name": "List machines: GET /api/v1/machines",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/v1/machines",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "machines"]
        }
      },
      "response": []
    },
    {
      "name": "Export CSV: GET /api/v1/export.csv",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/v1/export.csv",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "export.csv"]
        }
      },
      "response": []
    },
    {
      "name": "Machine history: GET /api/v1/machines/:id",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/v1/machines/{{machineId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "v1", "machines", "{{machineId}}"]
        }
      },
      "variable": [ { "key": "machineId", "value": "demo-machine" } ],
      "response": []
    }
  ]
}
